generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String    @unique
  username      String    @unique
  password      String 
  avatar        String?
  posts         Post[]
  createdAt     DateTime  @default(now())
  savedPosts    SavedPost[]
  chats         Chat[]    @relation(fields:[chatIds] ,references: [id])
  chatIds       String[] @db.ObjectId
}


model Post {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId 
  title        String
  price        Int
  image        String[]
  address      String
  city         String
  bedroom      Int
  bathroom     Int
  type         Type
  property     Property
  latitude     String
  longitude    String
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @db.ObjectId
  postDetails  PostDetails?
  savedPosts   SavedPost[]
}

enum Type{
  buy
  rent
}


enum Property{
  apartment
  house
  condo
  land
}

model PostDetails {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  desc        String 
  utilities   String?
  pet         String?
  income      String?
  size        Int?
  school      Int?
  bus         Int?
  restaurants Int?
  post        Post   @relation(fields:[postId], references: [id])
  postId      String @db.ObjectId @unique
}

model SavedPost {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        User     @relation(fields:[postId], references: [id])
  post        Post     @relation(fields:[postId], references: [id])
  userId      String   @db.ObjectId @unique
  postId      String   @db.ObjectId @unique
  createdAt   DateTime @default(now())

  @@unique([userId,postId])
}

model Chat{
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  users         User[]        @relation(fields: [userIds] , references: [id])
  userIds       String[]      @db.ObjectId
  createdAt     DateTime      @default(now())
  seenBy        String[]      @db.ObjectId
  message       Message[]
  lastMessage   String?
}

model Message{
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  text        String
  userId      String
  chat        Chat          @relation(fields: [chatId], references: [id])
  chatId      String        @db.ObjectId
  createdAt   DateTime      @default(now())

}